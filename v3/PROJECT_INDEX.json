{
  "indexed_at": "2025-09-01T12:40:48.500282",
  "root": ".",
  "project_structure": {
    "type": "tree",
    "root": ".",
    "tree": [
      ".",
      "\u251c\u2500\u2500 backup-delete-after-9-05/ (88 files)",
      "\u251c\u2500\u2500 images/",
      "\u251c\u2500\u2500 sounds/",
      "\u251c\u2500\u2500 test/ (22 files)",
      "\u2514\u2500\u2500 package.json"
    ]
  },
  "documentation_map": {
    "CLAUDE.md": {
      "sections": [
        "The Finals Loadout Generator v3 - Project Status",
        "Overview",
        "Current Status (2024-08-30)",
        "Critical Fixes Applied (2025-08-16)",
        "1. Respin Animation Fix",
        "2. Slot Machine Initialization",
        "3. Image Resolution System",
        "4. CSS Transform Conflicts",
        "5. Production CSS Loading Issue",
        "Recent Fix Attempts (2025-08-14)"
      ],
      "architecture_hints": []
    },
    "FIXES_SUMMARY.md": {
      "sections": [
        "The Finals Loadout Generator v3 - Fixes Applied",
        "Date: 2025-08-31",
        "Issues Fixed:",
        "Files Modified:",
        "Files Created:",
        "How It Works Now:",
        "Known Working Features:",
        "Testing:",
        "Console Commands for Debugging:"
      ],
      "architecture_hints": []
    },
    "MOBILE_FIX_SUMMARY.md": {
      "sections": [
        "Mobile Slot Machine Fill Fix - Summary",
        "Issue",
        "Solution Applied",
        "1. Dynamic Item Generation (`app-optimized.js`)",
        "2. Dynamic Animation Positioning (`app-optimized.js`)",
        "Technical Details",
        "Calculation Logic",
        "Example Values",
        "Files Modified",
        "Files Created"
      ],
      "architecture_hints": []
    },
    "OPTIMIZATION_REPORT.md": {
      "sections": [
        "The Finals Loadout v3 - Optimization Report",
        "Executive Summary",
        "Key Achievements",
        "1. CSS Consolidation \u2705",
        "2. JavaScript Refactoring \u2705",
        "3. Accessibility Improvements \u2705",
        "4. Performance Optimizations \u2705",
        "File Size Comparison",
        "Before Optimization",
        "After Optimization"
      ],
      "architecture_hints": []
    },
    "test/HISTORY_UI_IMPLEMENTATION.md": {
      "sections": [
        "History UI Refinement - Implementation Summary",
        "Date: 2025-08-16",
        "Status: \u2705 COMPLETED",
        "Overview",
        "Files Created/Modified",
        "New Files Created:",
        "Files Modified:",
        "Implementation Details",
        "Visual Enhancements Applied:",
        "Responsive Behavior:"
      ],
      "architecture_hints": []
    },
    "test/MULTI_SPIN_FIX_SUMMARY.md": {
      "sections": [
        "Multi-Spin Sequence Fix Summary",
        "Date: 2025-08-14",
        "Engineer: Lead Implementation",
        "Problem Statement",
        "Root Causes Identified",
        "Implemented Fixes",
        "A) Spin Counter Fix \u2705",
        "B) Position Preservation \u2705  ",
        "C) Final Centering \u2705",
        "D) Legacy Cleanup \u2705"
      ],
      "architecture_hints": []
    },
    "test/POSITIONING_FIXES_SUMMARY.md": {
      "sections": [
        "Positioning Math Fixes - TheFinalsLoadout v3",
        "Summary of Changes Applied",
        "\u2705 1. CENTER_OFFSET = 80px (Row 2 positioning)",
        "\u2705 2. Target Wrapped Position: -1520px",
        "\u2705 3. Device Pixel Snapping Implementation",
        "\u2705 4. Improved applyPosition() Special Case",
        "\u2705 5. Slot Item Height: 80px Exactly",
        "\u2705 6. Slot Viewport Height: 240px Exactly",
        "\u2705 7. Winner Index Alignment Fix",
        "Viewport Layout Verification"
      ],
      "architecture_hints": []
    },
    "test/QA_TEST_DOCUMENT.md": {
      "sections": [
        "The Finals Loadout v3 - QA Testing Document",
        "Overview",
        "1. ACCEPTANCE TEST ASSERTIONS",
        "1.1 Stop Quality Tests",
        "1.2 Re-spin Visual Tests",
        "1.3 History System Tests"
      ],
      "architecture_hints": []
    },
    "test/QA_TEST_REPORT.md": {
      "sections": [
        "QA Test Report - The Finals Loadout Slot Machine v3",
        "Executive Summary",
        "Test Criteria Results",
        "\u274c CRITICAL FAILURES",
        "\u2705 PASSES",
        "\u26a0\ufe0f PARTIAL PASSES",
        "Critical Issues Identified",
        "Issue #1: Multi-Spin Position Preservation",
        "Issue #2: Insufficient Content Generation",
        "Issue #3: Animation State Management"
      ],
      "architecture_hints": []
    },
    "test/QA_VALIDATION_REPORT.md": {
      "sections": [
        "QA Validation Report - Slot Machine Implementation",
        "ACCEPTANCE CRITERIA TEST MATRIX",
        "DETAILED ANALYSIS",
        "1. 2-5 SPIN FLOWS \u2705 PASS",
        "2. NO PRE-HIGHLIGHT \u2705 PASS",
        "3. CENTERED LANDINGS \u2705 PASS",
        "4. NO POST-RESOLVE TRANSFORMS \u2705 PASS"
      ],
      "architecture_hints": []
    }
  },
  "directory_purposes": {
    "backup-delete-after-9-05": "Test files and test utilities",
    "test": "Test files and test utilities"
  },
  "stats": {
    "total_files": 120,
    "total_directories": 4,
    "fully_parsed": {
      "javascript": 41
    },
    "listed_only": {
      "html": 50,
      "json": 3,
      "css": 25,
      "shell": 1
    },
    "markdown_files": 10
  },
  "files": {
    "app-optimized.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "StateManager": {
          "methods": {
            "constructor": {
              "calls": [
                "loadHistory",
                "loadSetting"
              ],
              "signature": "()"
            },
            "subscribe": {
              "calls": [
                "set"
              ],
              "signature": "(key, callback)"
            },
            "notify": {
              "calls": [
                "forEach"
              ],
              "signature": "(key, newValue, oldValue)"
            },
            "loadHistory": {
              "signature": "()",
              "called_by": [
                "StateManager.constructor",
                "StateManager.__init__"
              ]
            },
            "saveHistory": "(history)",
            "loadSetting": {
              "signature": "(key, defaultValue)",
              "called_by": [
                "StateManager.constructor",
                "StateManager.__init__"
              ]
            },
            "saveSetting": {
              "signature": "(key, value)",
              "called_by": [
                "UIController.bindSoundToggle"
              ]
            },
            "__init__": {
              "calls": [
                "loadHistory",
                "loadSetting"
              ],
              "signature": "()"
            }
          },
          "doc": "The Finals Loadout Generator v3 - Optimized"
        },
        "AnimationEngine": {
          "methods": {
            "constructor": "()",
            "spin": {
              "calls": [
                "easeOutCubic",
                "getTransformY"
              ],
              "signature": "(element, duration, targetPosition)",
              "called_by": [
                "overrideExisting"
              ]
            },
            "getTransformY": {
              "signature": "(element)",
              "called_by": [
                "AnimationEngine.spin"
              ]
            },
            "easeOutCubic": {
              "signature": "(t)",
              "called_by": [
                "AnimationEngine.spin"
              ]
            },
            "stop": "()",
            "__init__": "()"
          },
          "doc": "The Finals Loadout Generator v3 - Optimized"
        },
        "SlotMachine": {
          "methods": {
            "constructor": "(container, animationEngine)",
            "init": {
              "signature": "()",
              "called_by": [
                "Application.setup"
              ]
            },
            "populateInitialItems": "()",
            "spin": {
              "signature": "async (loadout, spinCount = 1, totalSpins = 1)",
              "called_by": [
                "overrideExisting"
              ]
            },
            "populateColumn": "(column, loadout)",
            "createItem": "(type, loadout, isWinner = false)",
            "getRandomItem": {
              "signature": "(type, className)",
              "called_by": [
                "generateRandomLoadout"
              ]
            },
            "getItemImage": "(itemName)",
            "animateColumn": "async (column, isFinalSpin)",
            "highlightWinners": "()",
            "announceWinners": "()",
            "updateSpinCounter": "(current, total)",
            "reset": "()",
            "__init__": "(container, animationEngine)"
          },
          "doc": "The Finals Loadout Generator v3 - Optimized"
        },
        "to": {
          "methods": {},
          "doc": "The Finals Loadout Generator v3 - Optimized"
        },
        "UIController": {
          "methods": {
            "constructor": "(stateManager, slotMachine)",
            "init": {
              "signature": "()",
              "called_by": [
                "Application.setup"
              ]
            },
            "bindClassSelection": {
              "calls": [
                "forEach",
                "set"
              ],
              "signature": "()"
            },
            "bindGenerateButton": "()",
            "generateLoadout": {
              "signature": "async ()",
              "called_by": [
                "UIController.bindKeyboardShortcuts"
              ]
            },
            "createRandomLoadout": "(className)",
            "addToHistory": "(loadout)",
            "updateHistoryPanel": "()",
            "formatTime": "(timestamp)",
            "bindSoundToggle": {
              "calls": [
                "get",
                "saveSetting",
                "set"
              ],
              "signature": "()"
            },
            "bindHistoryPanel": "()",
            "bindKeyboardShortcuts": {
              "calls": [
                "generateLoadout"
              ],
              "signature": "()"
            },
            "updateGenerateButton": {
              "calls": [
                "get"
              ],
              "signature": "(isGenerating)",
              "called_by": [
                "startSlotMachine"
              ]
            },
            "showSpinAgain": "()",
            "updateUI": "()",
            "showError": "(message)",
            "debounce": "(func, wait)",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "__init__": "(stateManager, slotMachine)"
          },
          "doc": "The Finals Loadout Generator v3 - Optimized"
        },
        "selection": {
          "methods": {},
          "doc": "The Finals Loadout Generator v3 - Optimized"
        },
        "Application": {
          "methods": {
            "constructor": "()",
            "init": {
              "calls": [
                "setup"
              ],
              "signature": "()",
              "called_by": [
                "Application.setup"
              ]
            },
            "setup": {
              "calls": [
                "init"
              ],
              "signature": "()",
              "called_by": [
                "Application.init"
              ]
            },
            "handleInitError": "(error)",
            "__init__": "()"
          },
          "doc": "The Finals Loadout Generator v3 - Optimized"
        }
      },
      "constants": {
        "CONFIG": "collection"
      },
      "variables": [
        "oldValue",
        "callbacks",
        "stored",
        "limited",
        "settings",
        "startTime",
        "startPosition",
        "distance",
        "animate",
        "elapsed",
        "progress",
        "eased",
        "currentPosition",
        "transform",
        "matrix",
        "values",
        "premiumColumns",
        "itemsContainer",
        "type",
        "columnTypes",
        "column",
        "isMobile",
        "totalItems",
        "items",
        "i",
        "div",
        "animations",
        "winnerIndex",
        "item",
        "winnerItem",
        "content",
        "imgSrc",
        "gadgetIndex",
        "data",
        "pool",
        "specialCases",
        "additionalCases",
        "normalized",
        "duration",
        "itemHeight",
        "slotWindow",
        "viewportHeight",
        "itemsAboveViewport",
        "centerOffset",
        "winners",
        "announcement",
        "counter",
        "selectedClass",
        "className",
        "generateBtn",
        "spinAgainBtn",
        "loadout",
        "totalSpins",
        "weapon",
        "specialization",
        "gadgets",
        "availableGadgets",
        "index",
        "history",
        "historyContent",
        "now",
        "diff",
        "soundToggle",
        "enabled",
        "historyToggle",
        "historyPanel",
        "closeHistory",
        "clearHistory",
        "isOpen",
        "classes",
        "classBtn",
        "later",
        "slotContainer",
        "container",
        "app"
      ],
      "call_graph": {}
    },
    "debug-winner.js": {
      "language": "javascript",
      "parsed": false
    },
    "index.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Application entry point"
    },
    "mobile-test.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "package-lock.json": {
      "language": "json",
      "parsed": false
    },
    "package.json": {
      "language": "json",
      "parsed": false
    },
    "premium-integrated.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "PremiumIntegratedSlotMachine": {
          "methods": {
            "constructor": "()",
            "init": {
              "signature": "()",
              "called_by": [
                "Application.setup"
              ]
            },
            "loadGameData": "async ()",
            "loadFilterState": "()",
            "saveFilterState": "()",
            "waitForApp": {
              "calls": [
                "setupEventListeners",
                "setupSlotMachine"
              ],
              "signature": "()"
            },
            "setupSlotMachine": {
              "signature": "()",
              "called_by": [
                "PremiumIntegratedSlotMachine.waitForApp"
              ]
            },
            "setupPremiumColumns": "()",
            "setupEventListeners": {
              "signature": "()",
              "called_by": [
                "PremiumIntegratedSlotMachine.waitForApp"
              ]
            },
            "selectSpins": "(count)",
            "selectClass": "(classType)",
            "updateAppState": {
              "signature": "()",
              "called_by": [
                "startSlotMachine"
              ]
            },
            "randomizeEverything": "async ()",
            "updateGenerateButton": {
              "signature": "()",
              "called_by": [
                "startSlotMachine"
              ]
            },
            "checkAutoStart": {
              "calls": [
                "startSlotMachine"
              ],
              "signature": "()"
            },
            "startSlotMachine": {
              "signature": "async ()",
              "called_by": [
                "startSlotMachine",
                "PremiumIntegratedSlotMachine.checkAutoStart"
              ]
            },
            "populatePremiumColumns": {
              "calls": [
                "generateItemList"
              ],
              "signature": "(loadout)"
            },
            "generateItemList": {
              "signature": "(winner, type)",
              "called_by": [
                "PremiumIntegratedSlotMachine.populatePremiumColumns"
              ]
            },
            "getGameData": "()",
            "getFallbackData": "()",
            "getFilteredData": "(className)",
            "getImagePath": "(itemName)",
            "animatePremiumSpin": "async (isFinalSpin)",
            "showWinnersSequentially": "async ()",
            "createPulseRipple": "(winner)",
            "createColumnSparks": "(column, container)",
            "sleep": {
              "signature": "(ms)",
              "called_by": [
                "startSlotMachine"
              ]
            },
            "__init__": "()"
          },
          "doc": "Premium Integrated Slot Machine"
        },
        "selection": {
          "methods": {},
          "doc": "Premium Integrated Slot Machine"
        }
      },
      "variables": [
        "response",
        "saved",
        "checkApp",
        "app",
        "container",
        "columns",
        "column",
        "randomBtn",
        "generateBtn",
        "btn",
        "className",
        "spinBtns",
        "i",
        "finalSpin",
        "classBtns",
        "classes",
        "finalClass",
        "sparksContainer",
        "counter",
        "loadout",
        "columnData",
        "itemsContainer",
        "isMobile",
        "totalItems",
        "winnerPosition",
        "item",
        "itemDiv",
        "imagePath",
        "data",
        "pool",
        "classData",
        "filters",
        "filtered",
        "specialCases",
        "normalized",
        "duration",
        "testItem",
        "itemHeight",
        "slotWindow",
        "viewportHeight",
        "visibleItems",
        "centerItemIndex",
        "targetPosition",
        "winner",
        "rect",
        "centerX",
        "centerY",
        "ripple",
        "style",
        "sparkCount",
        "spark",
        "angle",
        "distance",
        "x",
        "y"
      ],
      "call_graph": {}
    },
    "PROJECT_INDEX.json": {
      "language": "json",
      "parsed": false
    },
    "test-mobile-fixes.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "verify-mobile-fix.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/animation-constants-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "overrideGlobalConstants": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        },
        "patchAnimationEngineV2": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        },
        "patchSimpleSpinAnimation": {
          "signature": "()",
          "called_by": [
            "initialize",
            "initialize"
          ]
        },
        "monitorAndCorrect": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        },
        "initialize": {
          "calls": [
            "monitorAndCorrect",
            "overrideGlobalConstants",
            "patchAnimationEngineV2",
            "patchSimpleSpinAnimation"
          ],
          "signature": "()",
          "called_by": [
            "EnhancedController.waitForApp"
          ]
        }
      },
      "classes": {},
      "constants": {
        "CORRECT_VALUES": "collection",
        "ITEM_H": "value"
      },
      "variables": [
        "instance",
        "targetWrappedPosition",
        "minDistance",
        "baseUnwrapped",
        "correctCycleHeight",
        "targetWrappedRaw",
        "currentWrappedRaw",
        "adjustment",
        "targetUnwrapped",
        "originalAnimate",
        "result",
        "originalSpin",
        "originalStop",
        "correctedPositions",
        "i",
        "container",
        "column",
        "observer",
        "target",
        "transform",
        "match",
        "currentY"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/animation-engine-patch.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "patchAnimationEngine": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        }
      },
      "classes": {},
      "constants": {
        "CORRECT_ITEM_HEIGHT": "number",
        "CORRECT_VIEWPORT_HEIGHT": "number",
        "CORRECT_CENTER_OFFSET": "number",
        "CORRECT_TARGET_POSITION": "number",
        "ITEM_H": "value"
      },
      "variables": [
        "originalCalculate",
        "targetWrappedPosition",
        "minDistance",
        "baseUnwrapped",
        "targetWrappedRaw",
        "currentWrappedRaw",
        "adjustment",
        "targetUnwrapped",
        "originalAnimate",
        "result",
        "columns",
        "itemsContainer",
        "currentTransform",
        "match",
        "currentY"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/animation-engine-v2.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "AnimationEngineV2": {
          "methods": {
            "constructor": "()",
            "resetAnimation": {
              "signature": "()",
              "called_by": [
                "overrideExisting"
              ]
            },
            "animateSlotMachine": {
              "signature": "async (columns, scrollContents, predeterminedResults, preservePosition = false)",
              "called_by": [
                "overrideAll",
                "overrideAnimations"
              ]
            },
            "animateQuickSpin": "async (columns, scrollContents, preservePosition = false)",
            "initializeColumnStates": "(columns, preservePosition = false)",
            "applyPosition": "(element, unwrappedY, cycleHeight)",
            "getStateByElement": "(element)",
            "calculateFutureTarget": "(currentUnwrappedY, winnerIndex, cycleHeight, totalSpins = 1)",
            "runAnimation": "async (columns, predeterminedResults)",
            "determinePhase": "(elapsed, state, isFinalSpin = true)",
            "updateVelocity": {
              "calls": [
                "calculateBrakingDistance",
                "easeOutQuad"
              ],
              "signature": "(state, phase, elapsed, cruiseSpeed, dt)"
            },
            "calculateBrakingDistance": {
              "signature": "(velocity)",
              "called_by": [
                "AnimationEngineV2.updateVelocity"
              ]
            },
            "isAnimationComplete": "(state, isFinalSpin = true)",
            "updateBlur": "(element, velocity, phase)",
            "easeOutQuad": {
              "signature": "(t)",
              "called_by": [
                "AnimationEngineV2.updateVelocity"
              ]
            },
            "easeOutCubic": {
              "signature": "(t)",
              "called_by": [
                "AnimationEngine.spin"
              ]
            },
            "easeOutQuart": "(t)",
            "createDebugPanel": "()",
            "updateDebugPanel": "()",
            "cleanup": {
              "signature": "()",
              "called_by": [
                "overrideAnimations"
              ]
            },
            "forceStopAnimation": "()",
            "__init__": "()"
          },
          "doc": "The Finals Slot Machine Animation Engine v2"
        }
      },
      "constants": {
        "ITEM_H": "number",
        "VIEWPORT_H": "number",
        "CENTER_OFFSET": "number",
        "ANIM_CONFIG": "collection"
      },
      "variables": [
        "columns",
        "itemsContainer",
        "currentTransform",
        "originalDurations",
        "itemCount",
        "cycleHeight",
        "startPos",
        "match",
        "startVelocity",
        "existingState",
        "baseOffset",
        "wrappedY",
        "snappedY",
        "targetWrappedPosition",
        "minDistance",
        "baseUnwrapped",
        "targetWrappedRaw",
        "currentWrappedRaw",
        "adjustment",
        "targetUnwrapped",
        "startTime",
        "lastTime",
        "maxDuration",
        "cruiseSpeed",
        "isFinalSpin",
        "totalUnwrapped",
        "columnCount",
        "state",
        "averageUnwrapped",
        "winnerIndex",
        "commonTarget",
        "animate",
        "dt",
        "totalElapsed",
        "intermediateDuration",
        "allComplete",
        "prevY",
        "columnStartDelay",
        "columnElapsed",
        "phase",
        "deltaPos",
        "exactFinalPosition",
        "snappedFinal",
        "verifyTransform",
        "currentWrapped",
        "displayWrapped",
        "cumulativeTime",
        "distanceToTarget",
        "currentBrakingDistance",
        "accelProgress",
        "jitter",
        "decelProgress",
        "targetIntermediate",
        "brakingDistance",
        "targetVelocity",
        "maxVelocityChange",
        "distance",
        "totalDuration",
        "elapsed",
        "isComplete",
        "maxSpeed",
        "blurAmount",
        "blurMultiplier",
        "progressToTarget",
        "panel",
        "reversalEl",
        "firstColumn",
        "brakingDist"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/animation-friendly-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/app.js": {
      "language": "javascript",
      "parsed": true,
      "purpose": "Application entry point",
      "functions": {
        "initializeDOMElements": "()",
        "loadSavedState": {
          "calls": [
            "renderHistory",
            "updateSoundToggle"
          ],
          "signature": "()"
        },
        "attachEventListeners": "()",
        "initializeSlotMachine": {
          "calls": [
            "initializeComponents"
          ],
          "signature": "()"
        },
        "initializeComponents": {
          "calls": [
            "saveLoadoutToHistory"
          ],
          "signature": "()",
          "called_by": [
            "initializeSlotMachine"
          ]
        },
        "handleGenerateClick": "async ()",
        "handleSelectionsComplete": "async (selections)",
        "handleSpinAgainClick": "async ()",
        "runNumberSelectorAnimation": {
          "calls": [
            "delay"
          ],
          "signature": "async ()"
        },
        "runClassRouletteAnimation": {
          "calls": [
            "delay"
          ],
          "signature": "async ()"
        },
        "runSlotMachineAnimation": {
          "calls": [
            "delay",
            "displayLoadoutResult",
            "playSound"
          ],
          "signature": "async ()"
        },
        "generateRandomLoadout": {
          "calls": [
            "getRandomItem",
            "getUniqueRandomItems"
          ],
          "signature": "(classType)"
        },
        "getRandomItem": {
          "signature": "(array)",
          "called_by": [
            "generateRandomLoadout"
          ]
        },
        "getUniqueRandomItems": {
          "signature": "(array, count)",
          "called_by": [
            "generateRandomLoadout"
          ]
        },
        "displayLoadoutResult": {
          "signature": "(loadout)",
          "called_by": [
            "runSlotMachineAnimation"
          ]
        },
        "saveLoadoutToHistory": {
          "calls": [
            "renderHistory"
          ],
          "signature": "async ()",
          "called_by": [
            "initializeComponents"
          ]
        },
        "renderHistory": {
          "signature": "()",
          "called_by": [
            "loadSavedState",
            "saveLoadoutToHistory"
          ]
        },
        "toggleSound": {
          "calls": [
            "playSound",
            "updateSoundToggle"
          ],
          "signature": "()"
        },
        "updateSoundToggle": {
          "signature": "()",
          "called_by": [
            "loadSavedState",
            "toggleSound"
          ]
        },
        "toggleFilterPanel": {
          "calls": [
            "closeFilterPanel"
          ],
          "signature": "()"
        },
        "closeFilterPanel": {
          "signature": "()",
          "called_by": [
            "toggleFilterPanel"
          ]
        },
        "clearAllFilters": {
          "calls": [
            "updateFilterCounts"
          ],
          "signature": "()"
        },
        "updateFilterCounts": {
          "signature": "()",
          "called_by": [
            "clearAllFilters"
          ]
        },
        "initializeScrollEffects": "()",
        "playSound": {
          "signature": "(soundName)",
          "called_by": [
            "runSlotMachineAnimation",
            "toggleSound"
          ]
        },
        "delay": {
          "signature": "(ms)",
          "called_by": [
            "runNumberSelectorAnimation",
            "runClassRouletteAnimation",
            "runSlotMachineAnimation",
            "SimpleSpinAnimation.stopReelsRandomly",
            "SmoothSpinAnimation.stopReelsSequentially"
          ]
        }
      },
      "classes": {
        "roulette": {
          "methods": {},
          "doc": "The Finals Random Loadout Generator v2"
        },
        "selection": {
          "methods": {},
          "doc": "The Finals Random Loadout Generator v2"
        }
      },
      "constants": {
        "DOM": "collection"
      },
      "variables": [
        "slotMachine",
        "selectionManager",
        "loadoutsData",
        "savedSound",
        "savedHistory",
        "scriptsToLoad",
        "scriptsLoaded",
        "scriptElement",
        "formattedLoadout",
        "classes",
        "loadout",
        "classData",
        "gadgets",
        "shuffled",
        "resultDiv",
        "itemsDiv",
        "bonusIndicator",
        "effect",
        "historyHTML",
        "soundOn",
        "soundOff",
        "allCheckboxes",
        "weaponCheckboxes",
        "weaponChecked",
        "weaponCount",
        "specCheckboxes",
        "specChecked",
        "specCount",
        "gadgetCheckboxes",
        "gadgetChecked",
        "gadgetCount",
        "lastScrollTop",
        "scrollTop",
        "scrollHeight",
        "scrollPercent",
        "sound"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/automated-flow-styles.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/automated-flow.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "AutomatedFlowManager": {
          "methods": {
            "constructor": "()",
            "initialize": {
              "signature": "()",
              "called_by": [
                "EnhancedController.waitForApp"
              ]
            },
            "createFlowUI": "()",
            "startAutomatedFlow": "async ()",
            "autoSelectSpins": "async ()",
            "autoSelectClass": "async ()",
            "showLoadingTransition": "async ()",
            "runSlotMachine": "async ()",
            "playTickSounds": "(duration)",
            "playSound": {
              "signature": "(type)",
              "called_by": [
                "toggleSound",
                "runSlotMachineAnimation"
              ]
            },
            "attachEventListeners": "()",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "getSelections": "()",
            "resetForNewFlow": "()",
            "createCelebrationGlow": "(element, color = \"#ffcc00\")",
            "celebrationPause": "async (phaseElement, duration = 750)",
            "__init__": "()"
          },
          "doc": "Automated Single-Button Flow System"
        },
        "await": {
          "methods": {
            "autoSelectSpins": "async ()"
          },
          "doc": "Automated Single-Button Flow System"
        },
        "cards": {
          "methods": {},
          "doc": "Automated Single-Button Flow System"
        },
        "const": {
          "methods": {},
          "doc": "Automated Single-Button Flow System"
        },
        "display": {
          "methods": {},
          "doc": "Automated Single-Button Flow System"
        }
      },
      "constants": {
        "FLOW_CONFIG": "collection"
      },
      "variables": [
        "container",
        "preSlotContainer",
        "phase",
        "strip",
        "numbers",
        "indicator",
        "progressBar",
        "targetNumber",
        "targetPositions",
        "targetIndex",
        "scrollAmount",
        "cards",
        "carousel",
        "classes",
        "targetClass",
        "cycleCount",
        "cycleInterval",
        "totalCycles",
        "cycleTimer",
        "currentIndex",
        "selectedIndex",
        "autoContainer",
        "slotContainer",
        "classDisplay",
        "slotColumns",
        "slotItemsContainers",
        "loadout",
        "spinAgainSection",
        "spinAgainBtn",
        "tickCount",
        "currentTick",
        "tickInterval",
        "sounds",
        "audio",
        "generateBtn",
        "newBtn",
        "newSpinBtn",
        "sections",
        "section",
        "phases",
        "rect",
        "parent",
        "parentRect",
        "glow",
        "ring"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/automated-test.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/bonus-styles.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/bonus-system.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "for": {
          "methods": {
            "constructor": "()",
            "initialize": {
              "signature": "()",
              "called_by": [
                "EnhancedController.waitForApp"
              ]
            },
            "createBonusUI": "()",
            "__init__": "()"
          },
          "doc": "Bonus Respin System for The Finals Loadout Generator"
        },
        "BonusManager": {
          "methods": {
            "constructor": "()",
            "initialize": {
              "signature": "()",
              "called_by": [
                "EnhancedController.waitForApp"
              ]
            },
            "createBonusUI": "()",
            "checkBonusTrigger": "()",
            "triggerBonus": "async ()",
            "selectBonusType": "()",
            "showBonusAnimation": "async (bonusType)",
            "applyBonusEffect": "async (baseLoadout, slotMachine)",
            "applyDoubleSpin": "async (baseLoadout, slotMachine)",
            "applyGuaranteedMeta": "(baseLoadout)",
            "applyClassChoice": "async (baseLoadout, slotMachine)",
            "applyWildCard": "(baseLoadout)",
            "applyJackpot": "(baseLoadout)",
            "showClassSelector": "async ()",
            "createParticles": "()",
            "shakeScreen": "()",
            "playBonusSound": "()",
            "showBonusMessage": "(message)",
            "getRandomMessage": "(type)",
            "getUniqueRandomItems": {
              "signature": "(array, count)",
              "called_by": [
                "generateRandomLoadout"
              ]
            },
            "attachEventListeners": {
              "calls": [
                "updateIndicator"
              ],
              "signature": "()"
            },
            "updateIndicator": {
              "signature": "()",
              "called_by": [
                "BonusManager.attachEventListeners"
              ]
            },
            "loadBonusHistory": "()",
            "saveBonusHistory": "()",
            "getStatistics": "()",
            "__init__": "()"
          },
          "doc": "Bonus Respin System for The Finals Loadout Generator"
        },
        "selection": {
          "methods": {},
          "doc": "Bonus Respin System for The Finals Loadout Generator"
        },
        "const": {
          "methods": {
            "applyWildCard": "(baseLoadout)"
          },
          "doc": "Bonus Respin System for The Finals Loadout Generator"
        },
        "selector": {
          "methods": {
            "showClassSelector": "async ()"
          },
          "doc": "Bonus Respin System for The Finals Loadout Generator"
        }
      },
      "constants": {
        "BONUS_CONFIG": "collection"
      },
      "variables": [
        "overlay",
        "indicator",
        "slotContainer",
        "chance",
        "roll",
        "triggered",
        "bonusType",
        "totalWeight",
        "random",
        "icon",
        "title",
        "description",
        "message",
        "bonus",
        "result",
        "secondLoadout",
        "metaWeapons",
        "classMetaWeapons",
        "selectedClass",
        "newLoadout",
        "allWeapons",
        "allSpecs",
        "allGadgets",
        "classData",
        "wildLoadout",
        "perfectLoadouts",
        "perfect",
        "modal",
        "option",
        "container",
        "i",
        "particle",
        "audio",
        "messageEl",
        "messages",
        "shuffled",
        "chanceEl",
        "saved",
        "total",
        "types"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/class-selection-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "initClassSelection": {
          "calls": [
            "addEventListener",
            "forEach"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "buttons": {
          "methods": {}
        },
        "selection": {
          "methods": {}
        },
        "let": {
          "methods": {}
        },
        "selectedClass": {
          "methods": {}
        },
        "first": {
          "methods": {}
        },
        "is": {
          "methods": {}
        }
      },
      "variables": [
        "classButtons",
        "generateBtn",
        "selectedClass",
        "thisClass",
        "className",
        "activeBtn"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/cleanup-old-files.sh": {
      "language": "shell",
      "parsed": false
    },
    "backup-delete-after-9-05/column-alignment-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/complete-animation-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/complete-solution.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "ready": {
          "calls": [
            "addEventListener"
          ],
          "signature": "(fn)"
        },
        "updateGenerateButton": {
          "signature": "()",
          "called_by": [
            "startSlotMachine"
          ]
        },
        "getApp": {
          "signature": "()",
          "called_by": [
            "updateAppState",
            "startSlotMachine"
          ]
        },
        "updateAppState": {
          "calls": [
            "getApp"
          ],
          "signature": "()",
          "called_by": [
            "startSlotMachine"
          ]
        },
        "checkAutoStart": "()",
        "startSlotMachine": {
          "calls": [
            "getApp",
            "sleep",
            "startSlotMachine",
            "updateAppState",
            "updateGenerateButton"
          ],
          "signature": "async ()",
          "called_by": [
            "PremiumIntegratedSlotMachine.checkAutoStart",
            "startSlotMachine"
          ]
        },
        "sleep": {
          "signature": "(ms)",
          "called_by": [
            "startSlotMachine"
          ]
        }
      },
      "classes": {
        "selection": {
          "methods": {},
          "doc": "Complete Solution for The Finals Loadout Generator v3"
        },
        "is": {
          "methods": {},
          "doc": "Complete Solution for The Finals Loadout Generator v3"
        },
        "name": {
          "methods": {},
          "doc": "Complete Solution for The Finals Loadout Generator v3"
        }
      },
      "variables": [
        "selectedSpins",
        "selectedClass",
        "isAnimating",
        "randomAllBtn",
        "spinButtons",
        "cycles",
        "delay",
        "i",
        "index",
        "finalSpinBtn",
        "classButtons",
        "classes",
        "finalClassBtn",
        "generateBtn",
        "app",
        "className",
        "loadout",
        "slotContainer",
        "originalGenerateLoadout",
        "spinAgainBtn"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/comprehensive-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/consistent-spin-animation.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "overrideAnimations": {
          "calls": [
            "animateSlotMachine",
            "cleanup"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "ConsistentSpinAnimation": {
          "methods": {
            "constructor": "()",
            "animateSlotMachine": {
              "signature": "async (columns, winners)",
              "called_by": [
                "overrideAll",
                "overrideAnimations"
              ]
            },
            "setupContainers": "(columns)",
            "startAllReels": "(containers)",
            "stopAllReels": "async (containers)",
            "stopSingleReel": "(container)",
            "highlightWinners": "(columns)",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "cleanup": {
              "signature": "()",
              "called_by": [
                "overrideAnimations"
              ]
            },
            "__init__": "()"
          },
          "doc": "Consistent Spin Animation - All reels spin downward"
        },
        "to": {
          "methods": {},
          "doc": "Consistent Spin Animation - All reels spin downward"
        }
      },
      "constants": {
        "ITEM_HEIGHT": "number",
        "VIEWPORT_HEIGHT": "number",
        "ITEMS_PER_COLUMN": "number",
        "CYCLE_HEIGHT": "value",
        "WINNER_INDEX": "number",
        "FINAL_POSITION": "value",
        "SPIN_DURATION": "number",
        "SPIN_SPEED": "number",
        "DECEL_DURATION": "number",
        "REEL_DELAY": "number"
      },
      "variables": [
        "containers",
        "itemsContainer",
        "currentTransform",
        "startPos",
        "match",
        "animate",
        "frameId",
        "i",
        "targetPos",
        "distance",
        "startTime",
        "decelerate",
        "elapsed",
        "progress",
        "eased",
        "currentPos",
        "items",
        "proto",
        "originalSpin",
        "column",
        "allColumns"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/critical-css.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/debug-app.js": {
      "language": "javascript",
      "parsed": false
    },
    "backup-delete-after-9-05/debug-button.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/diagnostic-overlay.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "checkConstants": {
          "signature": "()",
          "called_by": [
            "updateDisplay",
            "runChecks"
          ]
        },
        "monitorPositions": {
          "signature": "()",
          "called_by": [
            "updateDisplay"
          ]
        },
        "checkViewports": {
          "signature": "()",
          "called_by": [
            "updateDisplay"
          ]
        },
        "checkForGaps": {
          "signature": "()",
          "called_by": [
            "updateDisplay"
          ]
        },
        "updateDisplay": {
          "calls": [
            "checkConstants",
            "checkForGaps",
            "checkViewports",
            "monitorPositions"
          ],
          "signature": "()"
        },
        "monitorAnimationState": "()"
      },
      "classes": {},
      "variables": [
        "panel",
        "toggleBtn",
        "diagnosticData",
        "containers",
        "transform",
        "match",
        "position",
        "column",
        "isSpinning",
        "positionInfo",
        "issue",
        "finalPositions",
        "allSame",
        "windows",
        "height",
        "items",
        "wrongHeights",
        "slotMachine",
        "slotHeader",
        "slotColumns",
        "headerBottom",
        "columnsTop",
        "gap",
        "html",
        "isCorrect",
        "color",
        "status",
        "spinning",
        "complete"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/downward-spin-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "overrideAll": {
          "calls": [
            "animateSlotMachine"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "DownwardSpinAnimation": {
          "methods": {
            "constructor": "()",
            "animateSlotMachine": {
              "signature": "async (columns, winners)",
              "called_by": [
                "overrideAll",
                "overrideAnimations"
              ]
            },
            "startSpinning": "()",
            "stopReels": "async ()",
            "stopReel": {
              "signature": "(reel)",
              "called_by": [
                "SmoothSpinAnimation.stopReelsSequentially"
              ]
            },
            "highlightWinners": "()",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "__init__": "()"
          },
          "doc": "Downward Spin Fix - Forces all reels to spin downward correctly"
        }
      },
      "constants": {
        "ITEM_HEIGHT": "number",
        "VIEWPORT_HEIGHT": "number",
        "ITEMS_PER_COLUMN": "number",
        "TOTAL_HEIGHT": "value",
        "WINNER_INDEX": "number",
        "FINAL_POSITION": "value",
        "SPIN_SPEED": "number",
        "SPIN_DURATION": "number",
        "DECEL_DURATION": "number",
        "REEL_DELAY": "number"
      },
      "variables": [
        "itemsEl",
        "animate",
        "anySpinning",
        "i",
        "startPos",
        "targetPos",
        "distance",
        "startTime",
        "decelerate",
        "elapsed",
        "progress",
        "eased",
        "currentPos",
        "items",
        "columns"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/enhanced-app.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "selection": {
          "methods": {},
          "doc": "Enhanced App Controller for The Finals Loadout Generator v3"
        },
        "EnhancedController": {
          "methods": {
            "constructor": "()",
            "waitForApp": {
              "calls": [
                "initialize"
              ],
              "signature": "()"
            },
            "initialize": {
              "signature": "()",
              "called_by": [
                "EnhancedController.waitForApp"
              ]
            },
            "setupSpinSelection": "()",
            "selectSpins": "(count)",
            "animateRandomSpinSelection": "async ()",
            "setupClassSelection": "()",
            "selectClass": "(classType)",
            "animateRandomClassSelection": "async ()",
            "updateGenerateButton": {
              "signature": "()",
              "called_by": [
                "startSlotMachine"
              ]
            },
            "checkAutoStart": "()",
            "startSlotMachine": {
              "signature": "async ()",
              "called_by": [
                "startSlotMachine",
                "PremiumIntegratedSlotMachine.checkAutoStart"
              ]
            },
            "sleep": {
              "signature": "(ms)",
              "called_by": [
                "startSlotMachine"
              ]
            },
            "__init__": "()"
          },
          "doc": "Enhanced App Controller for The Finals Loadout Generator v3"
        },
        "buttons": {
          "methods": {},
          "doc": "Enhanced App Controller for The Finals Loadout Generator v3"
        },
        "if": {
          "methods": {},
          "doc": "Enhanced App Controller for The Finals Loadout Generator v3"
        }
      },
      "variables": [
        "checkApp",
        "spinButtons",
        "spins",
        "btn",
        "randomBtn",
        "cycles",
        "delay",
        "i",
        "index",
        "finalCount",
        "classButtons",
        "classType",
        "className",
        "classes",
        "finalClass",
        "generateBtn",
        "updateBtn",
        "loadout",
        "slotContainer",
        "spinAgainBtn"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/filter-system.js": {
      "language": "javascript",
      "parsed": false
    },
    "backup-delete-after-9-05/final-position-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "FinalPositionFixer": {
          "methods": {
            "constructor": "()",
            "calculateExactPosition": "(container, winnerText)",
            "fixAllColumns": "(loadout)",
            "lockDOM": "(columns)",
            "unlockDOM": "(columns)",
            "__init__": "()"
          },
          "doc": "Final Position Fix"
        }
      },
      "variables": [
        "items",
        "winnerIndex",
        "i",
        "itemText",
        "translateY",
        "columnMapping",
        "column",
        "container",
        "exactY",
        "originalSpin",
        "isFinalSpin",
        "result"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/final-test.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/force-reload.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/history-styles-refined.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/history-styles.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/history-system-enhanced.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "initializeEnhancements": {
          "calls": [
            "enhanceHistoryManager",
            "reRenderAllCards"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "EnhancedHistoryManager": {
          "methods": {},
          "doc": "History System Enhancement"
        }
      },
      "constants": {
        "EQUIPMENT_ICONS": "collection"
      },
      "variables": [
        "originalCreateCard",
        "card",
        "score",
        "date",
        "timeString",
        "weaponIcon",
        "specIcon",
        "gadgetIcons",
        "iconFile",
        "container",
        "enhancedStyles",
        "styleElement"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/history-system.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "HistoryManager": {
          "methods": {
            "constructor": "(containerId)",
            "initialize": {
              "signature": "()",
              "called_by": [
                "EnhancedController.waitForApp"
              ]
            },
            "setupUI": "()",
            "initializeAnalyzer": "async ()",
            "addEntry": "async (loadout)",
            "renderNewEntry": "(entry)",
            "createHistoryCard": "(entry)",
            "setupEventListeners": {
              "signature": "()",
              "called_by": [
                "PremiumIntegratedSlotMachine.waitForApp"
              ]
            },
            "toggleFavorite": "(entryId)",
            "copyToClipboard": "async (entryId)",
            "showExportOptions": "(entryId)",
            "exportEntry": {
              "calls": [
                "exportAsImage",
                "exportAsJSON",
                "exportAsText"
              ],
              "signature": "(entry, format)"
            },
            "exportAsText": {
              "signature": "(entry)",
              "called_by": [
                "HistoryManager.exportEntry"
              ]
            },
            "exportAsJSON": {
              "signature": "(entry)",
              "called_by": [
                "HistoryManager.exportEntry"
              ]
            },
            "exportAsImage": {
              "signature": "async (entry)",
              "called_by": [
                "HistoryManager.exportEntry"
              ]
            },
            "formatAsText": "(entry)",
            "deleteEntry": "(entryId)",
            "showNotification": {
              "signature": "(message, type = \"success\")",
              "called_by": [
                "HistoryManager.clearAll"
              ]
            },
            "render": {
              "signature": "()",
              "called_by": [
                "HistoryManager.clearAll"
              ]
            },
            "showEmptyMessage": "(container = this.container)",
            "loadFromStorage": "()",
            "saveToStorage": {
              "signature": "()",
              "called_by": [
                "HistoryManager.clearAll"
              ]
            },
            "generateId": "()",
            "clearAll": {
              "calls": [
                "render",
                "saveToStorage",
                "showNotification"
              ],
              "signature": "()"
            },
            "exportAll": "()",
            "__init__": "(containerId)"
          },
          "doc": "Enhanced History System"
        },
        "FallbackAnalyzer": {
          "methods": {},
          "doc": "Enhanced History System"
        }
      },
      "constants": {
        "HISTORY_CONFIG": "collection"
      },
      "variables": [
        "entry",
        "card",
        "historyList",
        "emptyMsg",
        "firstChild",
        "countEl",
        "score",
        "date",
        "timeString",
        "button",
        "entryId",
        "action",
        "favBtn",
        "text",
        "modal",
        "option",
        "format",
        "blob",
        "url",
        "a",
        "json",
        "index",
        "notification",
        "entriesContainer",
        "stored",
        "data",
        "weapons",
        "weaponData"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/image-preloader.js": {
      "language": "javascript",
      "parsed": false
    },
    "backup-delete-after-9-05/index-backup-$(date +%Y%m%d-%H%M%S).html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-backup-20250824.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-backup-delete-after-9-05.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-backup.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-complete-fix.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-fast-spins.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-final-clean.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-final-fix.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-optimized.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-production-fix.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-smooth-spin.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/index-working.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/layout-fixes.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/lazy-images.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "loadBatch": "()",
        "initLazyLoading": {
          "calls": [
            "forEach"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "img": {
          "methods": {},
          "doc": "Lazy Image Loading for The Finals Loadout v3"
        }
      },
      "constants": {
        "IMAGE_LOAD_DELAY": "number",
        "BATCH_SIZE": "number"
      },
      "variables": [
        "pendingImages",
        "isLoading",
        "batch",
        "src",
        "testImg",
        "imageObserver",
        "img",
        "lazyImages",
        "mutationObserver",
        "imgs",
        "remaining"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/loadout-loader.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "getImagePath": {
          "calls": [
            "imageResolver"
          ],
          "signature": "(itemName, category = '')"
        },
        "loadLoadoutsData": "async ()"
      },
      "classes": {},
      "constants": {
        "IMAGE_NAME_MAP_LEGACY": "collection"
      },
      "variables": [
        "imageResolver",
        "fileName",
        "mappedName",
        "fallbackName",
        "response",
        "data"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/polish-styles-fixed.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/polish-styles.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/position-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "patchSimpleSpinAnimation": {
          "signature": "()",
          "called_by": [
            "initialize",
            "initialize"
          ]
        },
        "patchAnimationEngine": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        },
        "fixExistingPositions": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        },
        "monitorAnimations": {
          "signature": "()",
          "called_by": [
            "initialize"
          ]
        },
        "initialize": {
          "calls": [
            "fixExistingPositions",
            "monitorAnimations",
            "patchAnimationEngine",
            "patchSimpleSpinAnimation"
          ],
          "signature": "()",
          "called_by": [
            "EnhancedController.waitForApp"
          ]
        }
      },
      "classes": {},
      "constants": {
        "ITEM_HEIGHT": "number",
        "VIEWPORT_HEIGHT": "number",
        "WINNER_INDEX": "number",
        "CORRECT_FINAL_POSITION": "value"
      },
      "variables": [
        "originalStopReels",
        "correctedPositions",
        "i",
        "container",
        "column",
        "originalAnimate",
        "originalCalc",
        "targetWrappedPosition",
        "minDistance",
        "baseUnwrapped",
        "targetWrappedRaw",
        "currentWrappedRaw",
        "adjustment",
        "targetUnwrapped",
        "allItemContainers",
        "transform",
        "match",
        "currentY",
        "observer",
        "target",
        "itemsContainer"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/quick-spins-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "overrideExisting": {
          "calls": [
            "resetAnimation",
            "spin"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "QuickSpinsAnimation": {
          "methods": {
            "constructor": "()",
            "spin": {
              "signature": "async (columns, finalPositions, spinCount = 1, currentSpin = 1)",
              "called_by": [
                "overrideExisting"
              ]
            },
            "animateReel": "(container, index, spinDuration, decelDuration, isFinalSpin)",
            "highlightWinners": "(columns)",
            "resetAnimation": {
              "signature": "()",
              "called_by": [
                "overrideExisting"
              ]
            },
            "__init__": "()"
          },
          "doc": "Quick Spins Fix - Makes intermediate spins 30% duration"
        }
      },
      "constants": {
        "ITEM_HEIGHT": "number",
        "VIEWPORT_HEIGHT": "number",
        "ITEMS_PER_COLUMN": "number",
        "TOTAL_HEIGHT": "value",
        "WINNER_INDEX": "number",
        "TARGET_POSITION": "value",
        "QUICK_SPIN_DURATION": "number",
        "QUICK_DECEL_DURATION": "number",
        "FINAL_SPIN_DURATION": "number",
        "FINAL_DECEL_DURATION": "number"
      },
      "variables": [
        "isFinalSpin",
        "spinDuration",
        "decelDuration",
        "totalTime",
        "containers",
        "container",
        "promises",
        "startTime",
        "staggerDelay",
        "totalSpinTime",
        "baseVelocity",
        "currentTransform",
        "match",
        "position",
        "lastTime",
        "animate",
        "elapsed",
        "deltaTime",
        "frameMultiplier",
        "velocity",
        "decelProgress",
        "eased",
        "distanceToTarget",
        "currentPos",
        "remainingVelocity",
        "items",
        "animation",
        "columns"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/real-slot-machine.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/real-slot-machine.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "RealSlotMachineAnimation": {
          "methods": {
            "constructor": "()",
            "initSound": "()",
            "playSpinSound": "()",
            "stopSpinSound": "()",
            "playSlowingSound": "()",
            "spin": {
              "signature": "async (columns, finalPositions, spinCount = 1, currentSpin = 1)",
              "called_by": [
                "overrideExisting"
              ]
            },
            "startSpinning": "(reelElement)",
            "stopSpinning": "(reelElement)",
            "stopReel": {
              "signature": "(reel, isFinalSpin)",
              "called_by": [
                "SmoothSpinAnimation.stopReelsSequentially"
              ]
            },
            "highlightWinners": "(columns)",
            "wait": "(ms)",
            "reset": "()",
            "resetAnimation": {
              "signature": "()",
              "called_by": [
                "overrideExisting"
              ]
            },
            "__init__": "()"
          },
          "doc": "Real Slot Machine Animation"
        },
        "reelElement": {
          "methods": {
            "stopReel": {
              "signature": "(reel, isFinalSpin)",
              "called_by": [
                "SmoothSpinAnimation.stopReelsSequentially"
              ]
            }
          },
          "doc": "Real Slot Machine Animation"
        }
      },
      "constants": {
        "WINNER_INDEX": "number",
        "ITEMS_BEFORE_WINNER": "number"
      },
      "variables": [
        "isFinalSpin",
        "reels",
        "colElement",
        "container",
        "spinDuration",
        "i",
        "stopDelay",
        "totalDuration",
        "position",
        "animate",
        "totalHeight",
        "animId",
        "exactFinalY",
        "currentTransform",
        "currentY",
        "distance",
        "duration",
        "quickStopY",
        "items"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/selection-styles.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/simple-spin-animation.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "SimpleSpinAnimation": {
          "methods": {
            "constructor": "()",
            "spin": {
              "signature": "async (columns, finalPositions, spinCount = 1, currentSpin = 1)",
              "called_by": [
                "overrideExisting"
              ]
            },
            "getContainers": "(columns)",
            "startSpinning": {
              "calls": [
                "cycleReel"
              ],
              "signature": "async (containers)"
            },
            "cycleReel": {
              "signature": "(container)",
              "called_by": [
                "SimpleSpinAnimation.startSpinning"
              ]
            },
            "stopReelsAtPositions": "async (containers, finalPositions)",
            "stopReelsRandomly": {
              "calls": [
                "delay"
              ],
              "signature": "async (containers)"
            },
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "quickSpin": "async (columns)",
            "animateSlotMachine": {
              "signature": "async (columns, scrollContents, predeterminedResults, preservePosition)",
              "called_by": [
                "overrideAll",
                "overrideAnimations"
              ]
            },
            "animateQuickSpin": {
              "calls": [
                "forEach"
              ],
              "signature": "async (columns, scrollContents, preservePosition)"
            },
            "forceStopAnimation": "()",
            "resetAnimation": {
              "signature": "()",
              "called_by": [
                "overrideExisting"
              ]
            },
            "__init__": "()"
          },
          "doc": "SIMPLE WORKING SLOT MACHINE ANIMATION"
        },
        "for": {
          "methods": {
            "cycleReel": {
              "signature": "(container)",
              "called_by": [
                "SimpleSpinAnimation.startSpinning"
              ]
            }
          },
          "doc": "SIMPLE WORKING SLOT MACHINE ANIMATION"
        }
      },
      "variables": [
        "containers",
        "itemsContainer",
        "currentTransform",
        "position",
        "match",
        "itemHeight",
        "totalItems",
        "cycleHeight",
        "iterationCount",
        "i",
        "container",
        "finalPos",
        "verifyTransform",
        "computedStyle",
        "computedTransform",
        "randomPos",
        "oldDuration",
        "finalPositions"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/slot-center-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/slot-machine-fixes.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/slot-machine-mobile-fix.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "waitForApp": "(callback)"
      },
      "classes": {},
      "variables": [
        "checkApp",
        "app",
        "originalPopulateColumn",
        "slotWindow",
        "windowHeight",
        "computedStyle",
        "itemHeight",
        "visibleItems",
        "bufferItems",
        "totalItems",
        "winnerIndex",
        "items",
        "i",
        "item",
        "originalAnimateColumn",
        "centerOffset",
        "targetPosition"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/slot-machine.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "FilterSystem": {
          "methods": {
            "constructor": "()",
            "getFilteredData": "(classType)",
            "toggleFilter": "(category, item)",
            "clearFilters": "()",
            "__init__": "()"
          },
          "doc": "The Finals Slot Machine Core System"
        },
        "data": {
          "methods": {
            "generateScrollContents": "(classType, filteredData)"
          },
          "doc": "The Finals Slot Machine Core System"
        },
        "type": {
          "methods": {},
          "doc": "The Finals Slot Machine Core System"
        },
        "GadgetSelector": {
          "methods": {},
          "doc": "The Finals Slot Machine Core System"
        },
        "DeceptionEngine": {
          "methods": {
            "constructor": "()",
            "predetermineLoadout": "(classType, filteredData)",
            "buildScrollContent": "(itemPool, winner, highValueItems = [])",
            "generateScrollContents": "(classType, filteredData)",
            "selectRandom": "(array)",
            "__init__": "()"
          },
          "doc": "The Finals Slot Machine Core System"
        },
        "SlotMachine": {
          "methods": {
            "constructor": "()",
            "initializeColumns": "()",
            "initializeAnimationEngine": "()",
            "initializeBonusManager": "()",
            "applyFilters": "(filters)",
            "spin": {
              "signature": "async (classType, spinCount = 1)",
              "called_by": [
                "overrideExisting"
              ]
            },
            "populateScrollContainers": "(forceBuild = false, preservePosition = false)",
            "ensureViewportCoverage": "(column, columnType)",
            "basicAnimation": "async ()",
            "showSpinCounter": "(totalSpins)",
            "updateSpinCounter": "(current, total)",
            "hideSpinCounter": "()",
            "generateRandomScrollContents": "(classType, filteredData)",
            "ensureFinalWinnerPosition": "(loadout)",
            "maintainReelPosition": "()",
            "shuffleArray": "(array)",
            "addToHistory": "async (loadout)",
            "highlightWinnersAfterLanding": "async (loadout)",
            "getImagePath": "(itemName)",
            "createItemElement": "(item, index, winner, columnType)",
            "removeAllWinnerHighlighting": {
              "calls": [
                "forEach"
              ],
              "signature": "()"
            },
            "addNearMissHighlighting": "(centerItem, column)",
            "addWinnerHighlight": "(item, columnType)",
            "__init__": "()"
          },
          "doc": "The Finals Slot Machine Core System"
        },
        "to": {
          "methods": {},
          "doc": "The Finals Slot Machine Core System"
        },
        "item": {
          "methods": {},
          "doc": "The Finals Slot Machine Core System"
        },
        "and": {
          "methods": {},
          "doc": "The Finals Slot Machine Core System"
        }
      },
      "variables": [
        "baseData",
        "filteredData",
        "cleanPool",
        "defaults",
        "selectedGadgets",
        "attempts",
        "maxAttempts",
        "shuffled",
        "i",
        "j",
        "uniqueSet",
        "finalCheck",
        "weapon",
        "specialization",
        "gadgets",
        "content",
        "targetCount",
        "winnerPosition",
        "nearMissItem",
        "loopBuffer",
        "highValue",
        "element",
        "script",
        "totalSpins",
        "finalLoadout",
        "currentSpin",
        "capturedSpin",
        "capturedTotal",
        "isFirstSpin",
        "isFinalSpin",
        "loadout",
        "uniqueGadgets",
        "scrollContents",
        "key",
        "bonus",
        "column",
        "columnElements",
        "hasAllContainers",
        "isSimpleAnimation",
        "finalPositions",
        "items",
        "text",
        "preservePosition",
        "winner",
        "gadgetIndex",
        "currentPosition",
        "currentTransform",
        "matchY",
        "match3d",
        "match",
        "hasItems",
        "needsFullBuild",
        "existingItems",
        "itemElement",
        "newItem",
        "img",
        "label",
        "newImg",
        "imagePath",
        "item",
        "textSpan",
        "safePosition",
        "itemsContainer",
        "translateY",
        "startIndex",
        "endIndex",
        "hasVisibleItems",
        "safeTranslateY",
        "duration",
        "columns",
        "counter",
        "slotMachine",
        "numberEl",
        "scrollItems",
        "targetItems",
        "startPadding",
        "winnerName",
        "targetPosition",
        "positionDiff",
        "finalTransform",
        "finalMatchY",
        "finalMatch3d",
        "finalPosition",
        "windowRect",
        "winnerVisible",
        "winnerItem",
        "itemName",
        "itemRect",
        "isInViewport",
        "containerRect",
        "centerItem",
        "bestDistance",
        "debugItems",
        "itemCenter",
        "windowCenter",
        "distance",
        "itemText",
        "imageName",
        "fallback",
        "allItems",
        "star",
        "centerIndex",
        "nearMissIndices",
        "existingWinners"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/smooth-animation-engine.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "overrideAnimations": {
          "calls": [
            "animateSlotMachine",
            "cleanup"
          ],
          "signature": "()"
        }
      },
      "classes": {
        "SmoothSpinAnimation": {
          "methods": {
            "constructor": "()",
            "animateSlotMachine": {
              "signature": "async (columns, winners)",
              "called_by": [
                "overrideAll",
                "overrideAnimations"
              ]
            },
            "startSpinning": "(containers)",
            "stopReelsSequentially": {
              "calls": [
                "delay",
                "stopReel"
              ],
              "signature": "async (containers)"
            },
            "stopReel": {
              "signature": "async (container)",
              "called_by": [
                "SmoothSpinAnimation.stopReelsSequentially"
              ]
            },
            "highlightWinners": "(columns)",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "cleanup": {
              "signature": "()",
              "called_by": [
                "overrideAnimations"
              ]
            },
            "__init__": "()"
          },
          "doc": "Smooth Animation Engine - Simple and Working"
        },
        "for": {
          "methods": {},
          "doc": "Smooth Animation Engine - Simple and Working"
        }
      },
      "constants": {
        "ITEM_HEIGHT": "number",
        "VIEWPORT_HEIGHT": "number",
        "ITEMS_PER_COLUMN": "number",
        "TOTAL_HEIGHT": "value",
        "WINNER_INDEX": "number",
        "FINAL_POSITION": "value",
        "SPIN_DURATION": "number",
        "REEL_DELAY": "number",
        "SPIN_SPEED": "number"
      },
      "variables": [
        "containers",
        "container",
        "animate",
        "i",
        "startPosition",
        "targetPosition",
        "distance",
        "duration",
        "startTime",
        "animateToFinal",
        "elapsed",
        "progress",
        "eased",
        "currentPosition",
        "items",
        "originalProto",
        "column",
        "columns"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/sound-integration-patch.js": {
      "language": "javascript",
      "parsed": false
    },
    "backup-delete-after-9-05/sound-manager-fixed.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "SoundManager": {
          "methods": {
            "constructor": "()",
            "loadSounds": "()",
            "onSpinStart": "(isFirstSpin = false, spinNumber = 1)",
            "onSpinCycleEnd": "()",
            "onColumnLand": "(columnIndex)",
            "onCelebration": "()",
            "playSound": {
              "signature": "(soundKey)",
              "called_by": [
                "toggleSound",
                "runSlotMachineAnimation"
              ]
            },
            "stopSound": "(soundKey)",
            "stopAll": "()",
            "toggleSound": "()",
            "reset": "()",
            "__init__": "()"
          },
          "doc": "Sound Manager for The Finals Slot Machine - FIXED VERSION"
        }
      },
      "variables": [
        "savedPreference",
        "soundFiles",
        "audio",
        "columnKey",
        "landedThisSpin",
        "soundManager"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/sound-manager.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "SoundManager": {
          "methods": {
            "constructor": "()",
            "loadSounds": "()",
            "onSpinStart": "(isFirstSpin = false)",
            "onColumnLand": "(columnIndex)",
            "onCelebration": "()",
            "playSound": {
              "signature": "(soundKey)",
              "called_by": [
                "toggleSound",
                "runSlotMachineAnimation"
              ]
            },
            "stopSound": "(soundKey)",
            "stopAll": "()",
            "toggleSound": "()",
            "reset": "()",
            "__init__": "()"
          },
          "doc": "Sound Manager for The Finals Slot Machine"
        }
      },
      "variables": [
        "savedPreference",
        "soundFiles",
        "audio",
        "columnKey",
        "landedThisSpin",
        "soundManager"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/spin-animation.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/style-override-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/style.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/styles-complete.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/styles-consolidated.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/sw.js": {
      "language": "javascript",
      "parsed": false
    },
    "backup-delete-after-9-05/test-all-fixes.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-clean.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-diagnostics.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-enhanced.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-mobile-fill.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-performance.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-position-fix.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-real-slot.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/test-runner.js": {
      "language": "javascript",
      "parsed": true,
      "purpose": "Test file",
      "functions": {
        "test": "(name, fn)"
      },
      "classes": {},
      "variables": [
        "tests",
        "result",
        "itemH",
        "viewportH",
        "centerOffset",
        "windows",
        "heights",
        "items",
        "header",
        "columns",
        "headerBottom",
        "columnsTop",
        "gap",
        "containers",
        "positions",
        "transform",
        "match",
        "position",
        "styleSheets",
        "fixFiles",
        "loaded",
        "scripts",
        "fixScripts",
        "panel",
        "hasPanel",
        "passed",
        "failed",
        "errors",
        "allPass",
        "color"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/test-viewport-height.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/ultimate-alignment-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/ultimate-fix-v2.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/ultimate-height-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/unified-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/verify-animation.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {
        "checkCSSTransforms": {
          "signature": "()",
          "called_by": [
            "runChecks"
          ]
        },
        "checkAnimationEngines": {
          "signature": "()",
          "called_by": [
            "runChecks"
          ]
        },
        "checkConstants": {
          "signature": "()",
          "called_by": [
            "updateDisplay",
            "runChecks"
          ]
        },
        "checkCSSOverrides": {
          "signature": "()",
          "called_by": [
            "runChecks"
          ]
        },
        "testAnimation": {
          "signature": "async ()",
          "called_by": [
            "runChecks"
          ]
        },
        "runChecks": {
          "calls": [
            "checkAnimationEngines",
            "checkCSSOverrides",
            "checkCSSTransforms",
            "checkConstants",
            "testAnimation"
          ],
          "signature": "async ()"
        },
        "animate": "()"
      },
      "classes": {},
      "variables": [
        "checks",
        "testEl",
        "computed",
        "transform",
        "canSetTransform",
        "engines",
        "correct",
        "styleSheets",
        "hasForceTransform",
        "rules",
        "columns",
        "container",
        "startPos",
        "endPos",
        "currentPos",
        "frameCount",
        "maxFrames",
        "animate",
        "finalTransform",
        "animated",
        "passed",
        "total",
        "allPassed",
        "icon",
        "color",
        "resultColor"
      ],
      "call_graph": {}
    },
    "backup-delete-after-9-05/verify-complete-fix.html": {
      "language": "html",
      "parsed": false
    },
    "backup-delete-after-9-05/viewport-fix.css": {
      "language": "css",
      "parsed": false
    },
    "backup-delete-after-9-05/visual-test.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "backup-delete-after-9-05/winner-lock.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "WinnerLockSystem": {
          "methods": {
            "constructor": "()",
            "forceWinnerPosition": "(container, winnerText)",
            "lockAllWinners": "(loadout)",
            "verifyAndFix": "(loadout)",
            "unlockAll": "()",
            "__init__": "()"
          },
          "doc": "Winner Position Lock System"
        }
      },
      "variables": [
        "items",
        "currentWinnerIndex",
        "i",
        "winnerElement",
        "parent",
        "targetItem",
        "allItems",
        "columnMapping",
        "success",
        "column",
        "container",
        "observer",
        "currentTransform",
        "expectedTransform",
        "winnerInPosition",
        "originalFinalizeDOM",
        "originalStop",
        "result",
        "lockedTransform"
      ],
      "call_graph": {}
    },
    "test/position-math-test.js": {
      "language": "javascript",
      "parsed": true,
      "purpose": "Test file",
      "functions": {
        "testPositionMath": "()"
      },
      "classes": {},
      "constants": {
        "ITEM_H": "number",
        "VIEWPORT_H": "number",
        "CENTER_OFFSET": "number"
      },
      "variables": [
        "winnerIndex",
        "targetPosition",
        "expectedPosition",
        "mathCorrect",
        "arrayWinnerIndex",
        "effectivePosition",
        "initialTranslate",
        "travelDistance",
        "devicePixelRatio",
        "testY",
        "snappedY"
      ],
      "call_graph": {}
    },
    "test/quick-test.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/selection-animations.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "selection": {
          "methods": {
            "transitionToClassSelection": {
              "signature": "async ()",
              "called_by": [
                "SelectionManager.initialize"
              ]
            }
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "buildupTime": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        },
        "NumberSelector": {
          "methods": {
            "constructor": "(containerId)",
            "createUI": "()",
            "setupEventListeners": {
              "calls": [
                "startSelection"
              ],
              "signature": "()",
              "called_by": [
                "PremiumIntegratedSlotMachine.waitForApp"
              ]
            },
            "startSelection": {
              "signature": "async ()",
              "called_by": [
                "NumberSelector.setupEventListeners"
              ]
            },
            "runAcceleration": {
              "calls": [
                "easeInExpo",
                "updateLightPosition"
              ],
              "signature": "async ()"
            },
            "runHighSpeed": {
              "calls": [
                "updateLightPosition"
              ],
              "signature": "async ()"
            },
            "runDeceleration": "async ()",
            "runFinalReveal": "async ()",
            "updateLightPosition": {
              "signature": "(speed)",
              "called_by": [
                "NumberSelector.runHighSpeed",
                "NumberSelector.runAcceleration"
              ]
            },
            "selectNumber": "(number)",
            "createVictoryGlow": "(element)",
            "resetIndicators": "()",
            "dispatchSelectionEvent": "()",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "playSound": {
              "signature": "(key)",
              "called_by": [
                "toggleSound",
                "runSlotMachineAnimation"
              ]
            },
            "stopSound": "(key)",
            "easeInExpo": {
              "signature": "(t)",
              "called_by": [
                "NumberSelector.runAcceleration"
              ]
            },
            "easeOutCubic": {
              "signature": "(t)",
              "called_by": [
                "AnimationEngine.spin"
              ]
            },
            "__init__": "(containerId)"
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "ClassRoulette": {
          "methods": {
            "constructor": "(containerId)",
            "createUI": "()",
            "getClassIcon": "(className)",
            "getClassDescription": "(className)",
            "setupEventListeners": {
              "calls": [
                "startRoulette"
              ],
              "signature": "()",
              "called_by": [
                "PremiumIntegratedSlotMachine.waitForApp"
              ]
            },
            "startRoulette": {
              "signature": "async ()",
              "called_by": [
                "ClassRoulette.setupEventListeners"
              ]
            },
            "runBuildup": "async ()",
            "runSpotlightSpin": "async ()",
            "runFinalReveal": "async ()",
            "selectClass": "(className)",
            "createClassVictoryEffect": "(element)",
            "resetBoxes": "()",
            "dispatchSelectionEvent": "()",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "playSound": {
              "signature": "(key)",
              "called_by": [
                "toggleSound",
                "runSlotMachineAnimation"
              ]
            },
            "stopSound": "(key)",
            "easeOutQuad": {
              "signature": "(t)",
              "called_by": [
                "AnimationEngineV2.updateVelocity"
              ]
            },
            "__init__": "(containerId)"
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "roulette": {
          "methods": {
            "showSpinButton": "()"
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "boxes": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        },
        "CLASS_ROULETTE_CONFIG": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        },
        "icon": {
          "methods": {
            "getClassIcon": "(className)"
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "description": {
          "methods": {
            "getClassDescription": "(className)"
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "const": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        },
        "if": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        },
        "this": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        },
        "SelectionManager": {
          "methods": {
            "constructor": "()",
            "initialize": {
              "calls": [
                "transitionToClassSelection"
              ],
              "signature": "()",
              "called_by": [
                "EnhancedController.waitForApp"
              ]
            },
            "startSelection": {
              "signature": "()",
              "called_by": [
                "NumberSelector.setupEventListeners"
              ]
            },
            "transitionToClassSelection": {
              "signature": "async ()",
              "called_by": [
                "SelectionManager.initialize"
              ]
            },
            "showSpinButton": "()",
            "reset": "()",
            "delay": {
              "signature": "(ms)",
              "called_by": [
                "runClassRouletteAnimation",
                "runNumberSelectorAnimation",
                "runSlotMachineAnimation",
                "SmoothSpinAnimation.stopReelsSequentially",
                "SimpleSpinAnimation.stopReelsRandomly"
              ]
            },
            "playSound": {
              "signature": "(key)",
              "called_by": [
                "toggleSound",
                "runSlotMachineAnimation"
              ]
            },
            "__init__": "()"
          },
          "doc": "Pre-Slot Selection Animations"
        },
        "selector": {
          "methods": {},
          "doc": "Pre-Slot Selection Animations"
        }
      },
      "constants": {
        "NUMBER_SELECTOR_CONFIG": "collection",
        "CLASS_ROULETTE_CONFIG": "collection",
        "SELECTION_SOUNDS": "collection"
      },
      "variables": [
        "title",
        "indicatorsContainer",
        "i",
        "indicator",
        "lightEffect",
        "buttonContainer",
        "button",
        "startTime",
        "duration",
        "animate",
        "elapsed",
        "progress",
        "speed",
        "variation",
        "targetPosition",
        "startPosition",
        "eased",
        "currentSpeed",
        "targetIndicator",
        "selected",
        "currentIndex",
        "rect",
        "containerRect",
        "glow",
        "boxesContainer",
        "box",
        "color",
        "spotlight",
        "icons",
        "descriptions",
        "pulseSpeed",
        "pulseScale",
        "glowIntensity",
        "randomIndex",
        "currentBoxIndex",
        "lastChangeTime",
        "speedMultiplier",
        "changeInterval",
        "targetIndex",
        "selectedBox",
        "ring",
        "classContainer",
        "numberContainer",
        "spinButton"
      ],
      "call_graph": {}
    },
    "test/test-all-fixes.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-animation-fix.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-blank-cards-fix.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-counter-fix.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-full-flow.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-history-ui.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-image-resolution.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-landing-position.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-multi-spin.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-multi.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-respin-animation.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-slot.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-smooth-braking.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-spin-counter-manual.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-spin-simple.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/test-timeout-fix.html": {
      "language": "html",
      "parsed": false,
      "purpose": "Test file"
    },
    "test/verify-fixes.js": {
      "language": "javascript",
      "parsed": true,
      "imports": [
        "fs",
        "path"
      ],
      "functions": {
        "readFile": "(filename)",
        "checkPattern": {
          "calls": [
            "every"
          ],
          "signature": "(code, patterns, description)"
        }
      },
      "classes": {},
      "variables": [
        "fs",
        "path",
        "colors",
        "results",
        "found",
        "slotMachineCode",
        "capturedSpin",
        "capturedTotal",
        "winnerPosition",
        "hasCorrectMath",
        "i",
        "appCode",
        "animationEngineCode",
        "hasTimeout",
        "hasVelocityDecay",
        "hasItems",
        "totalTests",
        "passRate"
      ],
      "call_graph": {}
    },
    "test/verify-history-ui.js": {
      "language": "javascript",
      "parsed": true,
      "functions": {},
      "classes": {
        "HistoryUIVerification": {
          "methods": {
            "constructor": "()",
            "verifyStructure": "()",
            "verifyVisuals": "()",
            "testMobile": "()",
            "testDesktop": "()",
            "testEdgeCases": "()",
            "checkCardStacking": "()",
            "checkColumnsCollapsed": "()",
            "checkItemsStacked": "()",
            "checkGridColumns": "()",
            "checkHoverStates": "()",
            "checkCopyButtons": "()",
            "testLongNames": "()",
            "testMissingIcons": "()",
            "testRapidResize": "()",
            "testRTL": "()",
            "runAll": "()",
            "__init__": "()"
          },
          "doc": "History UI Verification Suite"
        }
      },
      "variables": [
        "width",
        "slotMachine",
        "computed",
        "buttons",
        "touchTargets",
        "rect",
        "icons",
        "textElements",
        "cards",
        "firstRect",
        "secondRect",
        "items",
        "rects",
        "itemsContainer",
        "testCard",
        "copyBtns",
        "testName",
        "item",
        "originalText",
        "hasEllipsis",
        "brokenIcons",
        "parent",
        "original",
        "noErrors",
        "container",
        "html",
        "originalDir",
        "isRTLReady",
        "allPassed",
        "report"
      ],
      "call_graph": {}
    },
    "test/verify-landing-fix.html": {
      "language": "html",
      "parsed": false
    }
  },
  "dependency_graph": {
    "test/verify-fixes.js": [
      "fs",
      "path"
    ]
  },
  "staleness_check": 1756150868.395246
}